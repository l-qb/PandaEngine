#pragma once

typedef enum EFormatType
{
	PRHI_FORMAT_UNDEFINED = 0,
	PRHI_FORMAT_R4G4_UNORM_PACK8 = 1,
	PRHI_FORMAT_R4G4B4A4_UNORM_PACK16 = 2,
	PRHI_FORMAT_B4G4R4A4_UNORM_PACK16 = 3,
	PRHI_FORMAT_R5G6B5_UNORM_PACK16 = 4,
	PRHI_FORMAT_B5G6R5_UNORM_PACK16 = 5,
	PRHI_FORMAT_R5G5B5A1_UNORM_PACK16 = 6,
	PRHI_FORMAT_B5G5R5A1_UNORM_PACK16 = 7,
	PRHI_FORMAT_A1R5G5B5_UNORM_PACK16 = 8,
	PRHI_FORMAT_R8_UNORM = 9,
	PRHI_FORMAT_R8_SNORM = 10,
	PRHI_FORMAT_R8_USCALED = 11,
	PRHI_FORMAT_R8_SSCALED = 12,
	PRHI_FORMAT_R8_UINT = 13,
	PRHI_FORMAT_R8_SINT = 14,
	PRHI_FORMAT_R8_SRGB = 15,
	PRHI_FORMAT_R8G8_UNORM = 16,
	PRHI_FORMAT_R8G8_SNORM = 17,
	PRHI_FORMAT_R8G8_USCALED = 18,
	PRHI_FORMAT_R8G8_SSCALED = 19,
	PRHI_FORMAT_R8G8_UINT = 20,
	PRHI_FORMAT_R8G8_SINT = 21,
	PRHI_FORMAT_R8G8_SRGB = 22,
	PRHI_FORMAT_R8G8B8_UNORM = 23,
	PRHI_FORMAT_R8G8B8_SNORM = 24,
	PRHI_FORMAT_R8G8B8_USCALED = 25,
	PRHI_FORMAT_R8G8B8_SSCALED = 26,
	PRHI_FORMAT_R8G8B8_UINT = 27,
	PRHI_FORMAT_R8G8B8_SINT = 28,
	PRHI_FORMAT_R8G8B8_SRGB = 29,
	PRHI_FORMAT_B8G8R8_UNORM = 30,
	PRHI_FORMAT_B8G8R8_SNORM = 31,
	PRHI_FORMAT_B8G8R8_USCALED = 32,
	PRHI_FORMAT_B8G8R8_SSCALED = 33,
	PRHI_FORMAT_B8G8R8_UINT = 34,
	PRHI_FORMAT_B8G8R8_SINT = 35,
	PRHI_FORMAT_B8G8R8_SRGB = 36,
	PRHI_FORMAT_R8G8B8A8_UNORM = 37,
	PRHI_FORMAT_R8G8B8A8_SNORM = 38,
	PRHI_FORMAT_R8G8B8A8_USCALED = 39,
	PRHI_FORMAT_R8G8B8A8_SSCALED = 40,
	PRHI_FORMAT_R8G8B8A8_UINT = 41,
	PRHI_FORMAT_R8G8B8A8_SINT = 42,
	PRHI_FORMAT_R8G8B8A8_SRGB = 43,
	PRHI_FORMAT_B8G8R8A8_UNORM = 44,
	PRHI_FORMAT_B8G8R8A8_SNORM = 45,
	PRHI_FORMAT_B8G8R8A8_USCALED = 46,
	PRHI_FORMAT_B8G8R8A8_SSCALED = 47,
	PRHI_FORMAT_B8G8R8A8_UINT = 48,
	PRHI_FORMAT_B8G8R8A8_SINT = 49,
	PRHI_FORMAT_B8G8R8A8_SRGB = 50,
	PRHI_FORMAT_A8B8G8R8_UNORM_PACK32 = 51,
	PRHI_FORMAT_A8B8G8R8_SNORM_PACK32 = 52,
	PRHI_FORMAT_A8B8G8R8_USCALED_PACK32 = 53,
	PRHI_FORMAT_A8B8G8R8_SSCALED_PACK32 = 54,
	PRHI_FORMAT_A8B8G8R8_UINT_PACK32 = 55,
	PRHI_FORMAT_A8B8G8R8_SINT_PACK32 = 56,
	PRHI_FORMAT_A8B8G8R8_SRGB_PACK32 = 57,
	PRHI_FORMAT_A2R10G10B10_UNORM_PACK32 = 58,
	PRHI_FORMAT_A2R10G10B10_SNORM_PACK32 = 59,
	PRHI_FORMAT_A2R10G10B10_USCALED_PACK32 = 60,
	PRHI_FORMAT_A2R10G10B10_SSCALED_PACK32 = 61,
	PRHI_FORMAT_A2R10G10B10_UINT_PACK32 = 62,
	PRHI_FORMAT_A2R10G10B10_SINT_PACK32 = 63,
	PRHI_FORMAT_A2B10G10R10_UNORM_PACK32 = 64,
	PRHI_FORMAT_A2B10G10R10_SNORM_PACK32 = 65,
	PRHI_FORMAT_A2B10G10R10_USCALED_PACK32 = 66,
	PRHI_FORMAT_A2B10G10R10_SSCALED_PACK32 = 67,
	PRHI_FORMAT_A2B10G10R10_UINT_PACK32 = 68,
	PRHI_FORMAT_A2B10G10R10_SINT_PACK32 = 69,
	PRHI_FORMAT_R16_UNORM = 70,
	PRHI_FORMAT_R16_SNORM = 71,
	PRHI_FORMAT_R16_USCALED = 72,
	PRHI_FORMAT_R16_SSCALED = 73,
	PRHI_FORMAT_R16_UINT = 74,
	PRHI_FORMAT_R16_SINT = 75,
	PRHI_FORMAT_R16_SFLOAT = 76,
	PRHI_FORMAT_R16G16_UNORM = 77,
	PRHI_FORMAT_R16G16_SNORM = 78,
	PRHI_FORMAT_R16G16_USCALED = 79,
	PRHI_FORMAT_R16G16_SSCALED = 80,
	PRHI_FORMAT_R16G16_UINT = 81,
	PRHI_FORMAT_R16G16_SINT = 82,
	PRHI_FORMAT_R16G16_SFLOAT = 83,
	PRHI_FORMAT_R16G16B16_UNORM = 84,
	PRHI_FORMAT_R16G16B16_SNORM = 85,
	PRHI_FORMAT_R16G16B16_USCALED = 86,
	PRHI_FORMAT_R16G16B16_SSCALED = 87,
	PRHI_FORMAT_R16G16B16_UINT = 88,
	PRHI_FORMAT_R16G16B16_SINT = 89,
	PRHI_FORMAT_R16G16B16_SFLOAT = 90,
	PRHI_FORMAT_R16G16B16A16_UNORM = 91,
	PRHI_FORMAT_R16G16B16A16_SNORM = 92,
	PRHI_FORMAT_R16G16B16A16_USCALED = 93,
	PRHI_FORMAT_R16G16B16A16_SSCALED = 94,
	PRHI_FORMAT_R16G16B16A16_UINT = 95,
	PRHI_FORMAT_R16G16B16A16_SINT = 96,
	PRHI_FORMAT_R16G16B16A16_SFLOAT = 97,
	PRHI_FORMAT_R32_UINT = 98,
	PRHI_FORMAT_R32_SINT = 99,
	PRHI_FORMAT_R32_SFLOAT = 100,
	PRHI_FORMAT_R32G32_UINT = 101,
	PRHI_FORMAT_R32G32_SINT = 102,
	PRHI_FORMAT_R32G32_SFLOAT = 103,
	PRHI_FORMAT_R32G32B32_UINT = 104,
	PRHI_FORMAT_R32G32B32_SINT = 105,
	PRHI_FORMAT_R32G32B32_SFLOAT = 106,
	PRHI_FORMAT_R32G32B32A32_UINT = 107,
	PRHI_FORMAT_R32G32B32A32_SINT = 108,
	PRHI_FORMAT_R32G32B32A32_SFLOAT = 109,
	PRHI_FORMAT_R64_UINT = 110,
	PRHI_FORMAT_R64_SINT = 111,
	PRHI_FORMAT_R64_SFLOAT = 112,
	PRHI_FORMAT_R64G64_UINT = 113,
	PRHI_FORMAT_R64G64_SINT = 114,
	PRHI_FORMAT_R64G64_SFLOAT = 115,
	PRHI_FORMAT_R64G64B64_UINT = 116,
	PRHI_FORMAT_R64G64B64_SINT = 117,
	PRHI_FORMAT_R64G64B64_SFLOAT = 118,
	PRHI_FORMAT_R64G64B64A64_UINT = 119,
	PRHI_FORMAT_R64G64B64A64_SINT = 120,
	PRHI_FORMAT_R64G64B64A64_SFLOAT = 121,
	PRHI_FORMAT_B10G11R11_UFLOAT_PACK32 = 122,
	PRHI_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123,
	PRHI_FORMAT_D16_UNORM = 124,
	PRHI_FORMAT_X8_D24_UNORM_PACK32 = 125,
	PRHI_FORMAT_D32_SFLOAT = 126,
	PRHI_FORMAT_S8_UINT = 127,
	PRHI_FORMAT_D16_UNORM_S8_UINT = 128,
	PRHI_FORMAT_D24_UNORM_S8_UINT = 129,
	PRHI_FORMAT_D32_SFLOAT_S8_UINT = 130,
	PRHI_FORMAT_BC1_RGB_UNORM_BLOCK = 131,
	PRHI_FORMAT_BC1_RGB_SRGB_BLOCK = 132,
	PRHI_FORMAT_BC1_RGBA_UNORM_BLOCK = 133,
	PRHI_FORMAT_BC1_RGBA_SRGB_BLOCK = 134,
	PRHI_FORMAT_BC2_UNORM_BLOCK = 135,
	PRHI_FORMAT_BC2_SRGB_BLOCK = 136,
	PRHI_FORMAT_BC3_UNORM_BLOCK = 137,
	PRHI_FORMAT_BC3_SRGB_BLOCK = 138,
	PRHI_FORMAT_BC4_UNORM_BLOCK = 139,
	PRHI_FORMAT_BC4_SNORM_BLOCK = 140,
	PRHI_FORMAT_BC5_UNORM_BLOCK = 141,
	PRHI_FORMAT_BC5_SNORM_BLOCK = 142,
	PRHI_FORMAT_BC6H_UFLOAT_BLOCK = 143,
	PRHI_FORMAT_BC6H_SFLOAT_BLOCK = 144,
	PRHI_FORMAT_BC7_UNORM_BLOCK = 145,
	PRHI_FORMAT_BC7_SRGB_BLOCK = 146,
	PRHI_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147,
	PRHI_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148,
	PRHI_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149,
	PRHI_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150,
	PRHI_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151,
	PRHI_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152,
	PRHI_FORMAT_EAC_R11_UNORM_BLOCK = 153,
	PRHI_FORMAT_EAC_R11_SNORM_BLOCK = 154,
	PRHI_FORMAT_EAC_R11G11_UNORM_BLOCK = 155,
	PRHI_FORMAT_EAC_R11G11_SNORM_BLOCK = 156,
	PRHI_FORMAT_ASTC_4x4_UNORM_BLOCK = 157,
	PRHI_FORMAT_ASTC_4x4_SRGB_BLOCK = 158,
	PRHI_FORMAT_ASTC_5x4_UNORM_BLOCK = 159,
	PRHI_FORMAT_ASTC_5x4_SRGB_BLOCK = 160,
	PRHI_FORMAT_ASTC_5x5_UNORM_BLOCK = 161,
	PRHI_FORMAT_ASTC_5x5_SRGB_BLOCK = 162,
	PRHI_FORMAT_ASTC_6x5_UNORM_BLOCK = 163,
	PRHI_FORMAT_ASTC_6x5_SRGB_BLOCK = 164,
	PRHI_FORMAT_ASTC_6x6_UNORM_BLOCK = 165,
	PRHI_FORMAT_ASTC_6x6_SRGB_BLOCK = 166,
	PRHI_FORMAT_ASTC_8x5_UNORM_BLOCK = 167,
	PRHI_FORMAT_ASTC_8x5_SRGB_BLOCK = 168,
	PRHI_FORMAT_ASTC_8x6_UNORM_BLOCK = 169,
	PRHI_FORMAT_ASTC_8x6_SRGB_BLOCK = 170,
	PRHI_FORMAT_ASTC_8x8_UNORM_BLOCK = 171,
	PRHI_FORMAT_ASTC_8x8_SRGB_BLOCK = 172,
	PRHI_FORMAT_ASTC_10x5_UNORM_BLOCK = 173,
	PRHI_FORMAT_ASTC_10x5_SRGB_BLOCK = 174,
	PRHI_FORMAT_ASTC_10x6_UNORM_BLOCK = 175,
	PRHI_FORMAT_ASTC_10x6_SRGB_BLOCK = 176,
	PRHI_FORMAT_ASTC_10x8_UNORM_BLOCK = 177,
	PRHI_FORMAT_ASTC_10x8_SRGB_BLOCK = 178,
	PRHI_FORMAT_ASTC_10x10_UNORM_BLOCK = 179,
	PRHI_FORMAT_ASTC_10x10_SRGB_BLOCK = 180,
	PRHI_FORMAT_ASTC_12x10_UNORM_BLOCK = 181,
	PRHI_FORMAT_ASTC_12x10_SRGB_BLOCK = 182,
	PRHI_FORMAT_ASTC_12x12_UNORM_BLOCK = 183,
	PRHI_FORMAT_ASTC_12x12_SRGB_BLOCK = 184,
	PRHI_FORMAT_G8B8G8R8_422_UNORM = 1000156000,
	PRHI_FORMAT_B8G8R8G8_422_UNORM = 1000156001,
	PRHI_FORMAT_G8_B8_R8_3PLANE_420_UNORM = 1000156002,
	PRHI_FORMAT_G8_B8R8_2PLANE_420_UNORM = 1000156003,
	PRHI_FORMAT_G8_B8_R8_3PLANE_422_UNORM = 1000156004,
	PRHI_FORMAT_G8_B8R8_2PLANE_422_UNORM = 1000156005,
	PRHI_FORMAT_G8_B8_R8_3PLANE_444_UNORM = 1000156006,
	PRHI_FORMAT_R10X6_UNORM_PACK16 = 1000156007,
	PRHI_FORMAT_R10X6G10X6_UNORM_2PACK16 = 1000156008,
	PRHI_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009,
	PRHI_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010,
	PRHI_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011,
	PRHI_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = 1000156012,
	PRHI_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = 1000156013,
	PRHI_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = 1000156014,
	PRHI_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = 1000156015,
	PRHI_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = 1000156016,
	PRHI_FORMAT_R12X4_UNORM_PACK16 = 1000156017,
	PRHI_FORMAT_R12X4G12X4_UNORM_2PACK16 = 1000156018,
	PRHI_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019,
	PRHI_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020,
	PRHI_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021,
	PRHI_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = 1000156022,
	PRHI_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = 1000156023,
	PRHI_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = 1000156024,
	PRHI_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = 1000156025,
	PRHI_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = 1000156026,
	PRHI_FORMAT_G16B16G16R16_422_UNORM = 1000156027,
	PRHI_FORMAT_B16G16R16G16_422_UNORM = 1000156028,
	PRHI_FORMAT_G16_B16_R16_3PLANE_420_UNORM = 1000156029,
	PRHI_FORMAT_G16_B16R16_2PLANE_420_UNORM = 1000156030,
	PRHI_FORMAT_G16_B16_R16_3PLANE_422_UNORM = 1000156031,
	PRHI_FORMAT_G16_B16R16_2PLANE_422_UNORM = 1000156032,
	PRHI_FORMAT_G16_B16_R16_3PLANE_444_UNORM = 1000156033,
	PRHI_FORMAT_G8_B8R8_2PLANE_444_UNORM = 1000330000,
	PRHI_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = 1000330001,
	PRHI_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = 1000330002,
	PRHI_FORMAT_G16_B16R16_2PLANE_444_UNORM = 1000330003,
	PRHI_FORMAT_A4R4G4B4_UNORM_PACK16 = 1000340000,
	PRHI_FORMAT_A4B4G4R4_UNORM_PACK16 = 1000340001,
	PRHI_FORMAT_ASTC_4x4_SFLOAT_BLOCK = 1000066000,
	PRHI_FORMAT_ASTC_5x4_SFLOAT_BLOCK = 1000066001,
	PRHI_FORMAT_ASTC_5x5_SFLOAT_BLOCK = 1000066002,
	PRHI_FORMAT_ASTC_6x5_SFLOAT_BLOCK = 1000066003,
	PRHI_FORMAT_ASTC_6x6_SFLOAT_BLOCK = 1000066004,
	PRHI_FORMAT_ASTC_8x5_SFLOAT_BLOCK = 1000066005,
	PRHI_FORMAT_ASTC_8x6_SFLOAT_BLOCK = 1000066006,
	PRHI_FORMAT_ASTC_8x8_SFLOAT_BLOCK = 1000066007,
	PRHI_FORMAT_ASTC_10x5_SFLOAT_BLOCK = 1000066008,
	PRHI_FORMAT_ASTC_10x6_SFLOAT_BLOCK = 1000066009,
	PRHI_FORMAT_ASTC_10x8_SFLOAT_BLOCK = 1000066010,
	PRHI_FORMAT_ASTC_10x10_SFLOAT_BLOCK = 1000066011,
	PRHI_FORMAT_ASTC_12x10_SFLOAT_BLOCK = 1000066012,
	PRHI_FORMAT_ASTC_12x12_SFLOAT_BLOCK = 1000066013,
	PRHI_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000,
	PRHI_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001,
	PRHI_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002,
	PRHI_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003,
	PRHI_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004,
	PRHI_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005,
	PRHI_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006,
	PRHI_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007,
	PRHI_FORMAT_R16G16_S10_5_NV = 1000464000,
	PRHI_FORMAT_COUNT,
	PRHI_FORMAT_MAX_ENUM_BIT = 0x7FFFFFFF
} EFormatType;

typedef enum EShaderStage
{
	PRHI_SHADER_STAGE_NONE = 0,

	PRHI_SHADER_STAGE_VERT = 0X00000001,
	PRHI_SHADER_STAGE_TESC = 0X00000002,
	PRHI_SHADER_STAGE_TESE = 0X00000004,
	PRHI_SHADER_STAGE_GEOM = 0X00000008,
	PRHI_SHADER_STAGE_FRAG = 0X00000010,
	PRHI_SHADER_STAGE_COMPUTE = 0X00000020,
	PRHI_SHADER_STAGE_RAYTRACING = 0X00000040,

	PRHI_SHADER_STAGE_ALL_GRAPHICS = (uint32_t)PRHI_SHADER_STAGE_VERT | (uint32_t)PRHI_SHADER_STAGE_TESC | (uint32_t)PRHI_SHADER_STAGE_TESE | (uint32_t)PRHI_SHADER_STAGE_GEOM | (uint32_t)PRHI_SHADER_STAGE_FRAG,
	PRHI_SHADER_STAGE_HULL = PRHI_SHADER_STAGE_TESC,
	PRHI_SHADER_STAGE_DOMAIN = PRHI_SHADER_STAGE_TESE,

	PRHI_SHADER_STAGE_COUNT = 6,
	PRHI_SHADER_STAGE_MAX_ENUM_BIT = 0x7FFFFFFF
}EShaderStage;
typedef uint32_t EShaderStages;

typedef enum EShaderResourceType
{
	PRHI_SHADER_RESOURCE_TYPE_NONE = 0,
	PRHI_SHADER_RESOURCE_TYPE_SAMPLER = 0x00000001,
	// SRV Read only texture
	PRHI_SHADER_RESOURCE_TYPE_TEXTURE = (PRHI_SHADER_RESOURCE_TYPE_SAMPLER << 1),
	/// RTV Texture
	PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET = (PRHI_SHADER_RESOURCE_TYPE_TEXTURE << 1),
	/// DSV Texture
	PRHI_SHADER_RESOURCE_TYPE_DEPTH_STENCIL = (PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET << 1),
	/// UAV Texture
	PRHI_SHADER_RESOURCE_TYPE_RW_TEXTURE = (PRHI_SHADER_RESOURCE_TYPE_DEPTH_STENCIL << 1),
	// SRV Read only buffer
	PRHI_SHADER_RESOURCE_TYPE_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_RW_TEXTURE << 1),
	PRHI_SHADER_RESOURCE_TYPE_BUFFER_RAW = (PRHI_SHADER_RESOURCE_TYPE_BUFFER | (PRHI_SHADER_RESOURCE_TYPE_BUFFER << 1)),
	/// UAV Buffer
	PRHI_SHADER_RESOURCE_TYPE_RW_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_BUFFER << 2),
	PRHI_SHADER_RESOURCE_TYPE_RW_BUFFER_RAW = (PRHI_SHADER_RESOURCE_TYPE_RW_BUFFER | (PRHI_SHADER_RESOURCE_TYPE_RW_BUFFER << 1)),
	/// CBV Uniform buffer
	PRHI_SHADER_RESOURCE_TYPE_UNIFORM_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_RW_BUFFER << 2),
	/// Push constant / Root constant
	PRHI_SHADER_RESOURCE_TYPE_PUSH_CONSTANT = (PRHI_SHADER_RESOURCE_TYPE_UNIFORM_BUFFER << 1),
	/// IA
	PRHI_SHADER_RESOURCE_TYPE_VERTEX_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_PUSH_CONSTANT << 1),
	PRHI_SHADER_RESOURCE_TYPE_INDEX_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_VERTEX_BUFFER << 1),
	PRHI_SHADER_RESOURCE_TYPE_INDIRECT_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_INDEX_BUFFER << 1),
	/// Cubemap SRV
	PRHI_SHADER_RESOURCE_TYPE_TEXTURE_CUBE = (PRHI_SHADER_RESOURCE_TYPE_TEXTURE | (PRHI_SHADER_RESOURCE_TYPE_INDIRECT_BUFFER << 1)),
	/// RTV / DSV per mip slice
	PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET_MIP_SLICES = (PRHI_SHADER_RESOURCE_TYPE_INDIRECT_BUFFER << 2),
	/// RTV / DSV per array slice
	PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET_ARRAY_SLICES = (PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET_MIP_SLICES << 1),
	/// RTV / DSV per depth slice
	PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET_DEPTH_SLICES = (PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET_ARRAY_SLICES << 1),
	PRHI_SHADER_RESOURCE_TYPE_RAY_TRACING = (PRHI_SHADER_RESOURCE_TYPE_RENDER_TARGET_DEPTH_SLICES << 1),
#if defined(RHI_USE_VULKAN)
	/// Subpass input (descriptor type only available in Vulkan)
	PRHI_SHADER_RESOURCE_TYPE_INPUT_ATTACHMENT = (PRHI_SHADER_RESOURCE_TYPE_RAY_TRACING << 1),
	PRHI_SHADER_RESOURCE_TYPE_TEXEL_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_INPUT_ATTACHMENT << 1),
	PRHI_SHADER_RESOURCE_TYPE_RW_TEXEL_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_TEXEL_BUFFER << 1),
	PRHI_SHADER_RESOURCE_TYPE_COMBINED_IMAGE_SAMPLER = (PRHI_SHADER_RESOURCE_TYPE_RW_TEXEL_BUFFER << 1),
#endif
#if defined(RHI_USE_METAL)
	PRHI_SHADER_RESOURCE_TYPE_ARGUMENT_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_RAY_TRACING << 1),
	PRHI_SHADER_RESOURCE_TYPE_INDIRECT_COMMAND_BUFFER = (PRHI_SHADER_RESOURCE_TYPE_ARGUMENT_BUFFER << 1),
	PRHI_SHADER_RESOURCE_TYPE_RENDER_PIPELINE_STATE = (PRHI_SHADER_RESOURCE_TYPE_INDIRECT_COMMAND_BUFFER << 1),
#endif
	PRHI_SHADER_RESOURCE_TYPE_MAX_ENUM_BIT = 0x7FFFFFFF
} EShaderResourceType;
typedef uint32_t EShaderResourceTypes;

typedef enum ETextureDimension
{
	PRHI_TEX_DIMENSION_1D,
	PRHI_TEX_DIMENSION_2D,
	PRHI_TEX_DIMENSION_2DMS,
	PRHI_TEX_DIMENSION_3D,
	PRHI_TEX_DIMENSION_CUBE,
	PRHI_TEX_DIMENSION_1D_ARRAY,
	PRHI_TEX_DIMENSION_2D_ARRAY,
	PRHI_TEX_DIMENSION_2DMS_ARRAY,
	PRHI_TEX_DIMENSION_CUBE_ARRAY,
	PRHI_TEX_DIMENSION_COUNT,
	PRHI_TEX_DIMENSION_UNDEFINED,
	PRHI_TEX_DIMENSION_MAX_ENUM_BIT = 0x7FFFFFFF
} ETextureDimension;

typedef enum EPipelineType
{
	PRHI_PIPELINE_TYPE_NONE = 0,
	PRHI_PIPELINE_TYPE_COMPUTE,
	PRHI_PIPELINE_TYPE_GRAPHICS,
	PRHI_PIPELINE_TYPE_RAYTRACING,
	PRHI_PIPELINE_TYPE_COUNT,
	PRHI_PIPELINE_TYPE_MAX_ENUM_BIT = 0x7FFFFFFF
} EPipelineType;

typedef enum ESampleCount
{
	PRHI_SAMPLE_COUNT_1 = 1,
	PRHI_SAMPLE_COUNT_2 = 2,
	PRHI_SAMPLE_COUNT_4 = 4,
	PRHI_SAMPLE_COUNT_8 = 8,
	PRHI_SAMPLE_COUNT_16 = 16,
	PRHI_SAMPLE_COUNT_32 = 32,
	PRHI_SAMPLE_COUNT_64 = 64,
	PRHI_SAMPLE_COUNT_MAX_ENUM_BIT = 0x7FFFFFFF
} ESampleCount;

typedef enum ESlotMaskBit
{
	PRHI_SLOT_0 = 0x1,
	PRHI_SLOT_1 = 0x2,
	PRHI_SLOT_2 = 0x4,
	PRHI_SLOT_3 = 0x8,
	PRHI_SLOT_4 = 0x10,
	PRHI_SLOT_5 = 0x20,
	PRHI_SLOT_6 = 0x40,
	PRHI_SLOT_7 = 0x80
} ESlotMaskBit;
typedef uint32_t ESlotMask;

typedef enum EPrimitiveTopology
{
	PRHI_PRIM_TOPO_POINT_LIST = 0,
	PRHI_PRIM_TOPO_LINE_LIST,
	PRHI_PRIM_TOPO_LINE_STRIP,
	PRHI_PRIM_TOPO_TRIANGLE_LIST,
	PRHI_PRIM_TOPO_TRIANGLE_STRIP,
	PRHI_PRIM_TOPO_PATCH_LIST,
	PRHI_PRIM_TOPO_COUNT,
	PRHI_PRIM_TOPO_MAX_ENUM_BIT = 0x7FFFFFFF
} EPrimitiveTopology;

typedef enum EVertexInputRate
{
	PRHI_INPUT_RATE_VERTEX = 0,
	PRHI_INPUT_RATE_INSTANCE = 1,
	PRHI_INPUT_RATE_COUNT,
	PRHI_INPUT_RATE_MAX_ENUM_BIT = 0x7FFFFFFF
} EVertexInputRate;

typedef enum EBlendConstant
{
	PRHI_BLEND_CONST_ZERO = 0,
	PRHI_BLEND_CONST_ONE,
	PRHI_BLEND_CONST_SRC_COLOR,
	PRHI_BLEND_CONST_ONE_MINUS_SRC_COLOR,
	PRHI_BLEND_CONST_DST_COLOR,
	PRHI_BLEND_CONST_ONE_MINUS_DST_COLOR,
	PRHI_BLEND_CONST_SRC_ALPHA,
	PRHI_BLEND_CONST_ONE_MINUS_SRC_ALPHA,
	PRHI_BLEND_CONST_DST_ALPHA,
	PRHI_BLEND_CONST_ONE_MINUS_DST_ALPHA,
	PRHI_BLEND_CONST_SRC_ALPHA_SATURATE,
	PRHI_BLEND_CONST_CONSTANT_COLOR,
	PRHI_BLEND_CONST_ONE_MINUS_CONSTANT_COLOR,
	PRHI_BLEND_CONST_COUNT,
	PRHI_BLEND_CONST_MAX_ENUM_BIT = 0x7FFFFFFF
} EBlendConstant;

typedef enum EBlendMode
{
	PRHI_BLEND_MODE_ADD,
	PRHI_BLEND_MODE_SUBTRACT,
	PRHI_BLEND_MODE_REVERSE_SUBTRACT,
	PRHI_BLEND_MODE_MIN,
	PRHI_BLEND_MODE_MAX,
	PRHI_BLEND_MODE_COUNT,
	PRHI_BLEND_MODE_MAX_ENUM_BIT = 0x7FFFFFFF
} EBlendMode;

typedef enum ECompareMode
{
	PRHI_CMP_MODE_NEVER,
	PRHI_CMP_MODE_LESS,
	PRHI_CMP_MODE_EQUAL,
	PRHI_CMP_MODE_LEQUAL,
	PRHI_CMP_MODE_GREATER,
	PRHI_CMP_MODE_NOTEQUAL,
	PRHI_CMP_MODE_GEQUAL,
	PRHI_CMP_MODE_ALWAYS,
	PRHI_CMP_MODE_COUNT,
	PRHI_CMP_MODE_MAX_ENUM_BIT = 0x7FFFFFFF
} ECompareMode;

typedef enum EStencilOp
{
	PRHI_STENCIL_OP_KEEP,
	PRHI_STENCIL_OP_SET_ZERO,
	PRHI_STENCIL_OP_REPLACE,
	PRHI_STENCIL_OP_INVERT,
	PRHI_STENCIL_OP_INCR,
	PRHI_STENCIL_OP_DECR,
	PRHI_STENCIL_OP_INCR_SAT,
	PRHI_STENCIL_OP_DECR_SAT,
	PRHI_STENCIL_OP_COUNT,
	PRHI_STENCIL_OP_MAX_ENUM_BIT = 0x7FFFFFFF
} EStencilOp;

typedef enum ECullMode
{
	PRHI_CULL_MODE_NONE = 0,
	PRHI_CULL_MODE_BACK,
	PRHI_CULL_MODE_FRONT,
	PRHI_CULL_MODE_BOTH,
	PRHI_CULL_MODE_COUNT,
	PRHI_CULL_MODE_MAX_ENUM_BIT = 0x7FFFFFFF
} ECullMode;

typedef enum EFillMode
{
	PRHI_FILL_MODE_SOLID,
	PRHI_FILL_MODE_WIREFRAME,
	PRHI_FILL_MODE_COUNT,
	PRHI_FILL_MODE_MAX_ENUM_BIT = 0x7FFFFFFF
} EFillMode;

typedef enum EFrontFace
{
	PRHI_FRONT_FACE_CCW = 0,
	PRHI_FRONT_FACE_CW,
	PRHI_FRONT_FACE_MAX_ENUM_BIT = 0x7FFFFFFF
} EFrontFace;

typedef enum EColorWriteMask {
	PRHI_COLOR_WRITE_MASK_R_BIT = 0x00000001,
	PRHI_COLOR_WRITE_MASK_G_BIT = 0x00000002,
	PRHI_COLOR_WRITE_MASK_B_BIT = 0x00000004,
	PRHI_COLOR_WRITE_MASK_A_BIT = 0x00000008,
	PRHI_COLOR_WRITE_MASK_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} EColorWriteMask;
typedef uint32_t EColorWriteMasks;

typedef enum EStoreAction
{
	PRHI_STORE_ACTION_STORE,
	PRHI_STORE_ACTION_DISCARD,
	PRHI_STORE_ACTION_COUNT,
	PRHI_STORE_ACTION_MAX_ENUM_BIT = 0x7FFFFFFF
} EStoreAction;

typedef enum ELoadAction
{
	PRHI_LOAD_ACTION_DONTCARE,
	PRHI_LOAD_ACTION_LOAD,
	PRHI_LOAD_ACTION_CLEAR,
	PRHI_LOAD_ACTION_COUNT,
	PRHI_LOAD_ACTION_MAX_ENUM_BIT = 0x7FFFFFFF
} ELoadAction;

typedef enum ETextureViewUsage
{
	PRHI_TVU_SRV = 0x01,
	PRHI_TVU_RTV_DSV = 0x02,
	PRHI_TVU_UAV = 0x04,
	PRHI_TVU_MAX_ENUM_BIT = 0x7FFFFFFF
} ETextureViewUsage;
typedef uint32_t ETextureViewUsages;

typedef enum ETextureViewAspect
{
	PRHI_TVA_COLOR = 0x01,
	PRHI_TVA_DEPTH = 0x02,
	PRHI_TVA_STENCIL = 0x04,
	PRHI_TVA_MAX_ENUM_BIT = 0x7FFFFFFF
} ETextureViewAspect;
typedef uint32_t ETextureViewAspects;

typedef enum ETextureCreationFlag
{
	PRHI_TCF_NONE = 0,
	PRHI_TCF_DEDICATED_BIT = 0x01,
	PRHI_TCF_EXPORT_BIT = 0x02,
	PRHI_TCF_EXPORT_ADAPTER_BIT = 0x04,
	PRHI_TCF_ON_TILE = 0x08,
	PRHI_TCF_NO_COMPRESSION = 0x10,
	PRHI_TCF_FORCE_2D = 0x20,
	PRHI_TCF_FORCE_3D = 0x40,
	PRHI_TCF_ALLOW_DISPLAY_TARGET = 0x80,
	PRHI_TCF_NORMAL_MAP = 0x100,
	PRHI_TCF_FRAG_MASK = 0x200,
	PRHI_TCF_ALIASING_RESOURCE = 0x400,
	PRHI_TCF_TILED_RESOURCE = 0x800,
	PRHI_TCF_USABLE_MAX = 0x40000,
	PRHI_TCF_MAX_ENUM_BIT = 0x7FFFFFFF
} ETextureCreationFlag;
typedef uint32_t ETextureCreationFlags;

typedef enum EResourceState
{
	PRHI_RESOURCE_STATE_UNDEFINED = 0,
	PRHI_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER = 0x1,
	PRHI_RESOURCE_STATE_INDEX_BUFFER = 0x2,
	PRHI_RESOURCE_STATE_RENDER_TARGET = 0x4,
	PRHI_RESOURCE_STATE_UNORDERED_ACCESS = 0x8,
	PRHI_RESOURCE_STATE_DEPTH_WRITE = 0x10,
	PRHI_RESOURCE_STATE_DEPTH_READ = 0x20,
	PRHI_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE = 0x40,
	PRHI_RESOURCE_STATE_PIXEL_SHADER_RESOURCE = 0x80,
	PRHI_RESOURCE_STATE_SHADER_RESOURCE = 0x40 | 0x80,
	PRHI_RESOURCE_STATE_STREAM_OUT = 0x100,
	PRHI_RESOURCE_STATE_INDIRECT_ARGUMENT = 0x200,
	PRHI_RESOURCE_STATE_COPY_DEST = 0x400,
	PRHI_RESOURCE_STATE_COPY_SOURCE = 0x800,
	PRHI_RESOURCE_STATE_GENERIC_READ = (((((0x1 | 0x2) | 0x40) | 0x80) | 0x200) | 0x800),
	PRHI_RESOURCE_STATE_PRESENT = 0x1000,
	PRHI_RESOURCE_STATE_COMMON = 0x2000,
	PRHI_RESOURCE_STATE_ACCELERATION_STRUCTURE = 0x4000,
	PRHI_RESOURCE_STATE_SHADING_RATE_SOURCE = 0x8000,
	PRHI_RESOURCE_STATE_RESOLVE_DEST = 0x10000,
	PRHI_RESOURCE_STATE_MAX_ENUM_BIT = 0x7FFFFFFF
} EResourceState;
typedef uint32_t EResourceStates;

typedef enum EResourceType
{
	PRHI_RESOURCE_TYPE_NONE = 0,
	PRHI_RESOURCE_TYPE_SAMPLER = 0x00000001,
	PRHI_RESOURCE_TYPE_TEXTURE = (PRHI_RESOURCE_TYPE_SAMPLER << 1),
	PRHI_RESOURCE_TYPE_RENDER_TARGET = (PRHI_RESOURCE_TYPE_TEXTURE << 1),
	PRHI_RESOURCE_TYPE_DEPTH_STENCIL = (PRHI_RESOURCE_TYPE_RENDER_TARGET << 1),
	PRHI_RESOURCE_TYPE_RW_TEXTURE = (PRHI_RESOURCE_TYPE_DEPTH_STENCIL << 1),
	PRHI_RESOURCE_TYPE_BUFFER = (PRHI_RESOURCE_TYPE_RW_TEXTURE << 1),
	PRHI_RESOURCE_TYPE_BUFFER_RAW = (PRHI_RESOURCE_TYPE_BUFFER | (PRHI_RESOURCE_TYPE_BUFFER << 1)),
	PRHI_RESOURCE_TYPE_RW_BUFFER = (PRHI_RESOURCE_TYPE_BUFFER << 2),
	PRHI_RESOURCE_TYPE_RW_BUFFER_RAW = (PRHI_RESOURCE_TYPE_RW_BUFFER | (PRHI_RESOURCE_TYPE_RW_BUFFER << 1)),
	PRHI_RESOURCE_TYPE_UNIFORM_BUFFER = (PRHI_RESOURCE_TYPE_RW_BUFFER << 2),
	PRHI_RESOURCE_TYPE_PUSH_CONSTANT = (PRHI_RESOURCE_TYPE_UNIFORM_BUFFER << 1),
	PRHI_RESOURCE_TYPE_VERTEX_BUFFER = (PRHI_RESOURCE_TYPE_PUSH_CONSTANT << 1),
	PRHI_RESOURCE_TYPE_INDEX_BUFFER = (PRHI_RESOURCE_TYPE_VERTEX_BUFFER << 1),
	PRHI_RESOURCE_TYPE_INDIRECT_BUFFER = (PRHI_RESOURCE_TYPE_INDEX_BUFFER << 1),
	PRHI_RESOURCE_TYPE_TEXTURE_CUBE = (PRHI_RESOURCE_TYPE_TEXTURE | (PRHI_RESOURCE_TYPE_INDIRECT_BUFFER << 1)),
	PRHI_RESOURCE_TYPE_RENDER_TARGET_MIP_SLICES = (PRHI_RESOURCE_TYPE_INDIRECT_BUFFER << 2),
	PRHI_RESOURCE_TYPE_RENDER_TARGET_ARRAY_SLICES = (PRHI_RESOURCE_TYPE_RENDER_TARGET_MIP_SLICES << 1),
	PRHI_RESOURCE_TYPE_RENDER_TARGET_DEPTH_SLICES = (PRHI_RESOURCE_TYPE_RENDER_TARGET_ARRAY_SLICES << 1),
	PRHI_RESOURCE_TYPE_RAY_TRACING = (PRHI_RESOURCE_TYPE_RENDER_TARGET_DEPTH_SLICES << 1),
#if defined(RHI_USE_VULKAN)
	PRHI_RESOURCE_TYPE_INPUT_ATTACHMENT = (PRHI_RESOURCE_TYPE_RAY_TRACING << 1),
	PRHI_RESOURCE_TYPE_TEXEL_BUFFER = (PRHI_RESOURCE_TYPE_INPUT_ATTACHMENT << 1),
	PRHI_RESOURCE_TYPE_RW_TEXEL_BUFFER = (PRHI_RESOURCE_TYPE_TEXEL_BUFFER << 1),
	PRHI_RESOURCE_TYPE_COMBINED_IMAGE_SAMPLER = (PRHI_RESOURCE_TYPE_RW_TEXEL_BUFFER << 1),
#endif
#if defined(RHI_USE_METAL)
	PRHI_RESOURCE_TYPE_ARGUMENT_BUFFER = (PRHI_RESOURCE_TYPE_RAY_TRACING << 1),
	PRHI_RESOURCE_TYPE_INDIRECT_COMMAND_BUFFER = (PRHI_RESOURCE_TYPE_ARGUMENT_BUFFER << 1),
	PRHI_RESOURCE_TYPE_RENDER_PIPELINE_STATE = (PRHI_RESOURCE_TYPE_INDIRECT_COMMAND_BUFFER << 1),
#endif
	PRHI_RESOURCE_TYPE_MAX_ENUM_BIT = 0x7FFFFFFF
} EResourceType;
typedef uint32_t EResourceTypes;

typedef enum EQueueType
{
	PRHI_QUEUE_TYPE_GRAPHICS = 0,
	PRHI_QUEUE_TYPE_COMPUTE = 1,
	PRHI_QUEUE_TYPE_TRANSFER = 2,
	PRHI_QUEUE_TYPE_TILE_MAPPING = 3,
	PRHI_QUEUE_TYPE_COUNT,
	PRHI_QUEUE_TYPE_MAX_ENUM_BIT = 0x7FFFFFFF
} EQueueType;

typedef enum ECommandBufferUsage {
	PRHI_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 0x00000001,
	PRHI_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 0x00000002,
	PRHI_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 0x00000004,
	PRHI_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} ECommandBufferUsage;
typedef uint32_t ECommandBufferUsages;


//////////////////////////////////////////Different////////////////////////////////////////
#define PRHI_VK_SUBPASS_EXTERNAL               (~0U)

typedef enum EImageLayout {
	PRHI_IMAGE_LAYOUT_UNDEFINED = 0,
	PRHI_IMAGE_LAYOUT_GENERAL = 1,
	PRHI_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,
	PRHI_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,
	PRHI_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,
	PRHI_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,
	PRHI_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,
	PRHI_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,
	PRHI_IMAGE_LAYOUT_PREINITIALIZED = 8,
	PRHI_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 1000117000,
	PRHI_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 1000117001,
	PRHI_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL = 1000241000,
	PRHI_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL = 1000241001,
	PRHI_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL = 1000241002,
	PRHI_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL = 1000241003,
	PRHI_IMAGE_LAYOUT_READ_ONLY_OPTIMAL = 1000314000,
	PRHI_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL = 1000314001,
	PRHI_IMAGE_LAYOUT_PRESENT_SRC_KHR = 1000001002,
	PRHI_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR = 1000024000,
	PRHI_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR = 1000024001,
	PRHI_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR = 1000024002,
	PRHI_IMAGE_LAYOUT_SHARED_PRESENT_KHR = 1000111000,
	PRHI_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = 1000218000,
	PRHI_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = 1000164003,
	PRHI_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT = 1000339000,
	PRHI_IMAGE_LAYOUT_MAX_ENUM = 0x7FFFFFFF
} EImageLayout;

typedef enum EPipelineBindPoint {
	PRHI_PIPELINE_BIND_POINT_GRAPHICS = 0,
	PRHI_PIPELINE_BIND_POINT_COMPUTE = 1,
	PRHI_PIPELINE_BIND_POINT_RAY_TRACING_KHR = 1000165000,
	PRHI_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI = 1000369003,
	PRHI_PIPELINE_BIND_POINT_RAY_TRACING_NV = PRHI_PIPELINE_BIND_POINT_RAY_TRACING_KHR,
	PRHI_PIPELINE_BIND_POINT_MAX_ENUM = 0x7FFFFFFF
} EPipelineBindPoint;

typedef enum EAttachmentType
{
	PRHI_ATTACHMENT_TYPE_COLOR = 0,
	PRHI_ATTACHMENT_TYPE_INPUT = 1,
	PRHI_ATTACHMENT_TYPE_DEPTHSTENCIL = 2,
	PRHI_ATTACHMENT_TYPE_RESOLVE = 3,
	PRHI_ATTACHMENT_TYPE_PRESERVE = 4,
	PRHI_ATTACHMENT_TYPE_COUNT,
	PRHI_ATTACHMENT_TYPE_MAX_ENUM = 0x7FFFFFFF
}EAttachmentType;

typedef enum EPipelineStageFlagBits {
	PRHI_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x00000001,
	PRHI_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x00000002,
	PRHI_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x00000004,
	PRHI_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x00000008,
	PRHI_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,
	PRHI_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,
	PRHI_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x00000040,
	PRHI_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x00000080,
	PRHI_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x00000100,
	PRHI_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x00000200,
	PRHI_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,
	PRHI_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x00000800,
	PRHI_PIPELINE_STAGE_TRANSFER_BIT = 0x00001000,
	PRHI_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x00002000,
	PRHI_PIPELINE_STAGE_HOST_BIT = 0x00004000,
	PRHI_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x00008000,
	PRHI_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x00010000,
	PRHI_PIPELINE_STAGE_NONE = 0,
	PRHI_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT = 0x01000000,
	PRHI_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = 0x00040000,
	PRHI_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 0x02000000,
	PRHI_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR = 0x00200000,
	PRHI_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT = 0x00800000,
	PRHI_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x00400000,
	PRHI_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV = 0x00020000,
	PRHI_PIPELINE_STAGE_TASK_SHADER_BIT_EXT = 0x00080000,
	PRHI_PIPELINE_STAGE_MESH_SHADER_BIT_EXT = 0x00100000,
	PRHI_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV = PRHI_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
	PRHI_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV = PRHI_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR,
	PRHI_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV = PRHI_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR,
	PRHI_PIPELINE_STAGE_TASK_SHADER_BIT_NV = PRHI_PIPELINE_STAGE_TASK_SHADER_BIT_EXT,
	PRHI_PIPELINE_STAGE_MESH_SHADER_BIT_NV = PRHI_PIPELINE_STAGE_MESH_SHADER_BIT_EXT,
	PRHI_PIPELINE_STAGE_NONE_KHR = PRHI_PIPELINE_STAGE_NONE,
	PRHI_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} EPipelineStageFlagBits;
typedef uint32_t EPipelineStageFlags;

typedef enum EAccessFlagBits {
	PRHI_ACCESS_INDIRECT_COMMAND_READ_BIT = 0x00000001,
	PRHI_ACCESS_INDEX_READ_BIT = 0x00000002,
	PRHI_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,
	PRHI_ACCESS_UNIFORM_READ_BIT = 0x00000008,
	PRHI_ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x00000010,
	PRHI_ACCESS_SHADER_READ_BIT = 0x00000020,
	PRHI_ACCESS_SHADER_WRITE_BIT = 0x00000040,
	PRHI_ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x00000080,
	PRHI_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,
	PRHI_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,
	PRHI_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,
	PRHI_ACCESS_TRANSFER_READ_BIT = 0x00000800,
	PRHI_ACCESS_TRANSFER_WRITE_BIT = 0x00001000,
	PRHI_ACCESS_HOST_READ_BIT = 0x00002000,
	PRHI_ACCESS_HOST_WRITE_BIT = 0x00004000,
	PRHI_ACCESS_MEMORY_READ_BIT = 0x00008000,
	PRHI_ACCESS_MEMORY_WRITE_BIT = 0x00010000,
	PRHI_ACCESS_NONE = 0,
	PRHI_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 0x02000000,
	PRHI_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 0x04000000,
	PRHI_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 0x08000000,
	PRHI_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT = 0x00100000,
	PRHI_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 0x00080000,
	PRHI_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR = 0x00200000,
	PRHI_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 0x00400000,
	PRHI_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 0x01000000,
	PRHI_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 0x00800000,
	PRHI_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV = 0x00020000,
	PRHI_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV = 0x00040000,
	PRHI_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV = PRHI_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR,
	PRHI_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV = PRHI_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR,
	PRHI_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV = PRHI_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR,
	PRHI_ACCESS_NONE_KHR = PRHI_ACCESS_NONE,
	PRHI_ACCESS_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} EAccessFlagBits;
typedef uint32_t EAccessFlags;

typedef enum EDependencyFlagBits {
	PRHI_DEPENDENCY_BY_REGION_BIT = 0x00000001,
	PRHI_DEPENDENCY_DEVICE_GROUP_BIT = 0x00000004,
	PRHI_DEPENDENCY_VIEW_LOCAL_BIT = 0x00000002,
	PRHI_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT = 0x00000008,
	PRHI_DEPENDENCY_VIEW_LOCAL_BIT_KHR = PRHI_DEPENDENCY_VIEW_LOCAL_BIT,
	PRHI_DEPENDENCY_DEVICE_GROUP_BIT_KHR = PRHI_DEPENDENCY_DEVICE_GROUP_BIT,
	PRHI_DEPENDENCY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
} EDependencyFlagBits;
typedef uint32_t EDependencyFlags;